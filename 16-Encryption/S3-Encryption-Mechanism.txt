# Overview of S3 Encryption mechanism

Server Side Encryption with S3 managed keys (SSE-S3):
- Requires minimal configuration
- Management of encryption keys managed by AWS
- We just need to upload the data and S3 will handle the encryption for us.
- Encryption process:
  - Client uploads object data to S3.
  - S3 then encrypts this data with plain text S3 data key.
  - This creates an encrypted version of the object data.
  - Next, the S3 Plain text data key is then encrypted with S3 master key.
  - This creates an encrypted version of S3 Plain text data key which is then stored in S3.
  - S3 Plain text data key is then deleted from the memory.
- Decryption process:
  - Request is made by the client to retrieve the object data.
  - S3 takes the encrypted S3 Data key and decrpyts it with S3 Master key.
  - This S3 Plain text data key is then used to decrypt the object data and sent back to client.

Server Side Encryption with KMS managed keys (SSE-KMS):
- Allows S3 to use KMS to generate data encryption keys.
- Gives greater flexibility of key management: deisable, rotation and access policies to CMKs.
- Encryption Process:
  - Client uploads object data to S3.
  - S3 then requests data-keys from KMS' CMK.
  - Using the specified CMK, KMS then generates two data keys, a plain text data key and
    an encrypted version of plain text data key.
  - These two keys are then sent back to S3 for encryption of Object data.
  - S3 performs the encryption of object data using the plain text data key.
  - This creates an encrypted version of object data which is then stored in S3 along with
    encrypted data key.
  - The plain text data key is then removed from the memory.
- Decryption Process:
  - Request is made by the client to retrieve the object data.
  - S3 sends the associated encrypted data key of the Object data to KMS.
  - KMS then uses the correct CMK to decrypt it and creates a plain text data key.
  - This plain text data key is then sent back to S3.
  - S3 decrypts the data using this Plain text data key.
  - The decrypted object data is then sent back to the user/client who requested it.

Server Side Encryption with Customer provided keys (SSE-C):
- Gives you the opportunity to provide your own master key.
- Your customer provided key would be sent with data to S3 and S3 would perform the
  encryption of your data for you.

Client Side Encryption with KMS (CSE-KMS):
- Uses the KMS to generate the data encryption keys.
- KMS is called upon via the client, not the S3.
- Encrytion takes place at client side and encrypted data is then sent to S3.

Client Side Encrytion with Customer provided keys (CSE-C):
- You are able to utilize your own provided keys.
- Use AWS SDK client to encrypt your data before sending it to S3 for storage.
